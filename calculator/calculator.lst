;  ASM code generated by mikroVirtualMachine for PIC - V. 8.0.0.0
;  Date/Time: 6/12/2015 10:36:14 AM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$288C			GOTO	_main
$0004	$	_Div_16x16_S_L:
$0004	$1303			BCF	STATUS, RP1
$0005	$1283			BCF	STATUS, RP0
$0006	$0D71			RLF	STACK_1, W
$0007	$0DF8			RLF	STACK_8, F
$0008	$0DF9			RLF	STACK_9, F
$0009	$0874			MOVF	STACK_4, W
$000A	$02F8			SUBWF	STACK_8, F
$000B	$0875			MOVF	STACK_5, W
$000C	$1C03			BTFSS	STATUS, C
$000D	$0F75			INCFSZ	STACK_5, W
$000E	$02F9			SUBWF	STACK_9, F
$000F	$0DF0			RLF	STACK_0, F
$0010	$0DF1			RLF	STACK_1, F
$0011	$300F			MOVLW	15
$0012	$00FC			MOVWF	STACK_12
$0013	$0D71			RLF	STACK_1, W
$0014	$0DF8			RLF	STACK_8, F
$0015	$0DF9			RLF	STACK_9, F
$0016	$0874			MOVF	STACK_4, W
$0017	$1C70			BTFSS	STACK_0, 0
$0018	$281F			GOTO	$+7
$0019	$02F8			SUBWF	STACK_8, F
$001A	$0875			MOVF	STACK_5, W
$001B	$1C03			BTFSS	STATUS, C
$001C	$0F75			INCFSZ	STACK_5, W
$001D	$02F9			SUBWF	STACK_9, F
$001E	$2824			GOTO	$+6
$001F	$07F8			ADDWF	STACK_8, F
$0020	$0875			MOVF	STACK_5, W
$0021	$1803			BTFSC	STATUS, C
$0022	$0F75			INCFSZ	STACK_5, W
$0023	$07F9			ADDWF	STACK_9, F
$0024	$0DF0			RLF	STACK_0, F
$0025	$0DF1			RLF	STACK_1, F
$0026	$0BFC			DECFSZ	STACK_12, F
$0027	$2813			GOTO	$-20
$0028	$1870			BTFSC	STACK_0, 0
$0029	$2830			GOTO	$+7
$002A	$0874			MOVF	STACK_4, W
$002B	$07F8			ADDWF	STACK_8, F
$002C	$0875			MOVF	STACK_5, W
$002D	$1803			BTFSC	STATUS, C
$002E	$0F75			INCFSZ	STACK_5, W
$002F	$07F9			ADDWF	STACK_9, F
$0030	$0000			NOP
$0031	$0008			RETURN
$0032	$	_Div_16x16_S:
$0032	$1303			BCF	STATUS, RP1
$0033	$1283			BCF	STATUS, RP0
$0034	$01FD			CLRF	STACK_13
$0035	$01F9			CLRF	STACK_9
$0036	$01F8			CLRF	STACK_8
$0037	$0871			MOVF	STACK_1, W
$0038	$0470			IORWF	STACK_0, W
$0039	$1903			BTFSC	STATUS, Z
$003A	$3400			RETLW	0
$003B	$0871			MOVF	STACK_1, W
$003C	$0675			XORWF	STACK_5, W
$003D	$00FA			MOVWF	STACK_10
$003E	$1BFA			BTFSC	STACK_10, 7
$003F	$09FD			COMF	STACK_13, F
$0040	$01FB			CLRF	STACK_11
$0041	$1FF5			BTFSS	STACK_5, 7
$0042	$2848			GOTO	$+6
$0043	$09F4			COMF	STACK_4, F
$0044	$09F5			COMF	STACK_5, F
$0045	$0AF4			INCF	STACK_4, F
$0046	$1903			BTFSC	STATUS, Z
$0047	$0AF5			INCF	STACK_5, F
$0048	$1FF1			BTFSS	STACK_1, 7
$0049	$284F			GOTO	$+6
$004A	$09F0			COMF	STACK_0, F
$004B	$09F1			COMF	STACK_1, F
$004C	$0AF0			INCF	STACK_0, F
$004D	$1903			BTFSC	STATUS, Z
$004E	$0AF1			INCF	STACK_1, F
$004F	$0871			MOVF	STACK_1, W
$0050	$0475			IORWF	STACK_5, W
$0051	$00FA			MOVWF	STACK_10
$0052	$1BFA			BTFSC	STACK_10, 7
$0053	$2864			GOTO	$+17
$0054	$2004			CALL	_Div_16x16_S_L
$0055	$187B			BTFSC	STACK_11, 0
$0056	$2877			GOTO	$+33
$0057	$1FFD			BTFSS	STACK_13, 7
$0058	$3400			RETLW	0
$0059	$09F0			COMF	STACK_0, F
$005A	$09F1			COMF	STACK_1, F
$005B	$0AF0			INCF	STACK_0, F
$005C	$1903			BTFSC	STATUS, Z
$005D	$0AF1			INCF	STACK_1, F
$005E	$09F8			COMF	STACK_8, F
$005F	$09F9			COMF	STACK_9, F
$0060	$0AF8			INCF	STACK_8, F
$0061	$1903			BTFSC	STATUS, Z
$0062	$0AF9			INCF	STACK_9, F
$0063	$3400			RETLW	0
$0064	$1FF5			BTFSS	STACK_5, 7
$0065	$2873			GOTO	$+14
$0066	$1BF1			BTFSC	STACK_1, 7
$0067	$286F			GOTO	$+8
$0068	$0871			MOVF	STACK_1, W
$0069	$00F9			MOVWF	STACK_9
$006A	$0870			MOVF	STACK_0, W
$006B	$00F8			MOVWF	STACK_8
$006C	$01F1			CLRF	STACK_1
$006D	$01F0			CLRF	STACK_0
$006E	$2857			GOTO	$-23
$006F	$01F1			CLRF	STACK_1
$0070	$01F0			CLRF	STACK_0
$0071	$0AF0			INCF	STACK_0, F
$0072	$3400			RETLW	0
$0073	$09F1			COMF	STACK_1, F
$0074	$09F0			COMF	STACK_0, F
$0075	$0AFB			INCF	STACK_11, F
$0076	$2854			GOTO	$-34
$0077	$0AF8			INCF	STACK_8, F
$0078	$1903			BTFSC	STATUS, Z
$0079	$0AF9			INCF	STACK_9, F
$007A	$0874			MOVF	STACK_4, W
$007B	$0278			SUBWF	STACK_8, W
$007C	$1D03			BTFSS	STATUS, Z
$007D	$2857			GOTO	$-38
$007E	$0875			MOVF	STACK_5, W
$007F	$0279			SUBWF	STACK_9, W
$0080	$1D03			BTFSS	STATUS, Z
$0081	$2857			GOTO	$-42
$0082	$01F9			CLRF	STACK_9
$0083	$01F8			CLRF	STACK_8
$0084	$0AF0			INCF	STACK_0, F
$0085	$1903			BTFSC	STATUS, Z
$0086	$0AF1			INCF	STACK_1, F
$0087	$1FF1			BTFSS	STACK_1, 7
$0088	$2857			GOTO	$-49
$0089	$0000			NOP
$008A	$34FF			RETLW	255
$008B	$0008			RETURN
$008C	$	_main:
;calculator.c,1 :: 		void main()
;calculator.c,5 :: 		int i=0;
$008C	$1303			BCF	STATUS, RP1
$008D	$1283			BCF	STATUS, RP0
$008E	$01A0			CLRF	main_i_L0
$008F	$01A1			CLRF	main_i_L0+1
;calculator.c,6 :: 		int out=0;
$0090	$01A2			CLRF	main_out_L0
$0091	$01A3			CLRF	main_out_L0+1
;calculator.c,8 :: 		TRISB=0b00000000;
$0092	$1683			BSF	STATUS, RP0
$0093	$0186			CLRF	TRISB, 1
;calculator.c,9 :: 		PORTB.F0=0;
$0094	$1283			BCF	STATUS, RP0
$0095	$1006			BCF	PORTB, 0
;calculator.c,10 :: 		PORTB.F1=0;
$0096	$1086			BCF	PORTB, 1
;calculator.c,11 :: 		PORTB.F2=0;
$0097	$1106			BCF	PORTB, 2
;calculator.c,12 :: 		PORTB.F3=0;
$0098	$1186			BCF	PORTB, 3
;calculator.c,13 :: 		PORTB.F4=0;
$0099	$1206			BCF	PORTB, 4
;calculator.c,14 :: 		PORTB.F5=0;
$009A	$1286			BCF	PORTB, 5
;calculator.c,15 :: 		PORTB.F6=0;
$009B	$1306			BCF	PORTB, 6
;calculator.c,16 :: 		PORTB.F7=0;
$009C	$1386			BCF	PORTB, 7
;calculator.c,18 :: 		while(1)
$009D	$	L_main_0:
;calculator.c,21 :: 		x=(PORTB.F0)+(PORTB.F1*2);
$009D	$3001			MOVLW	1
$009E	$0506			ANDWF	PORTB, 0
$009F	$00A2			MOVWF	main_out_L0
$00A0	$01A3			CLRF	main_out_L0+1
$00A1	$3000			MOVLW	0
$00A2	$05A3			ANDWF	main_out_L0+1, 1
$00A3	$3000			MOVLW	0
$00A4	$1886			BTFSC	PORTB, 1
$00A5	$3001			MOVLW	1
$00A6	$00F4			MOVWF	STACK_4
$00A7	$3001			MOVLW	1
$00A8	$00F4			MOVWF	STACK_4
$00A9	$0874			MOVF	STACK_4, 0
$00AA	$00F0			MOVWF	STACK_0
$00AB	$01F1			CLRF	STACK_0+1
$00AC	$0874			MOVF	STACK_4, 0
$00AD	$	L_main_4:
$00AD	$1903			BTFSC	STATUS, Z
$00AE	$28B4			GOTO	L_main_5
$00AF	$0DF0			RLF	STACK_0, 1
$00B0	$0DF1			RLF	STACK_0+1, 1
$00B1	$1070			BCF	STACK_0, 0
$00B2	$3FFF			ADDLW	255
$00B3	$28AD			GOTO	L_main_4
$00B4	$	L_main_5:
$00B4	$3000			MOVLW	0
$00B5	$00A3			MOVWF	main_out_L0+1
$00B6	$0870			MOVF	STACK_0, 0
$00B7	$07A2			ADDWF	main_out_L0, 1
$00B8	$0871			MOVF	STACK_0+1, 0
$00B9	$1803			BTFSC	STATUS, C
$00BA	$3F01			ADDLW	1
$00BB	$07A3			ADDWF	main_out_L0+1, 1
;calculator.c,22 :: 		y=(PORTB.F2)+(PORTB.F3*2);
$00BC	$3000			MOVLW	0
$00BD	$1906			BTFSC	PORTB, 2
$00BE	$3001			MOVLW	1
$00BF	$00AC			MOVWF	FLOC_main+12
$00C0	$3000			MOVLW	0
$00C1	$1986			BTFSC	PORTB, 3
$00C2	$3001			MOVLW	1
$00C3	$00F4			MOVWF	STACK_4
$00C4	$3001			MOVLW	1
$00C5	$00F4			MOVWF	STACK_4
$00C6	$0874			MOVF	STACK_4, 0
$00C7	$00F0			MOVWF	STACK_0
$00C8	$01F1			CLRF	STACK_0+1
$00C9	$0874			MOVF	STACK_4, 0
$00CA	$	L_main_6:
$00CA	$1903			BTFSC	STATUS, Z
$00CB	$28D1			GOTO	L_main_7
$00CC	$0DF0			RLF	STACK_0, 1
$00CD	$0DF1			RLF	STACK_0+1, 1
$00CE	$1070			BCF	STACK_0, 0
$00CF	$3FFF			ADDLW	255
$00D0	$28CA			GOTO	L_main_6
$00D1	$	L_main_7:
$00D1	$082C			MOVF	FLOC_main+12, 0
$00D2	$07F0			ADDWF	STACK_0, 1
$00D3	$1803			BTFSC	STATUS, C
$00D4	$0AF1			INCF	STACK_0+1, 1
;calculator.c,24 :: 		out=x+y;
$00D5	$0870			MOVF	STACK_0, 0
$00D6	$07A2			ADDWF	main_out_L0, 1
$00D7	$0871			MOVF	STACK_0+1, 0
$00D8	$1803			BTFSC	STATUS, C
$00D9	$3F01			ADDLW	1
$00DA	$07A3			ADDWF	main_out_L0+1, 1
;calculator.c,27 :: 		while(out>=0)
$00DB	$	L_main_2:
$00DB	$3080			MOVLW	128
$00DC	$0623			XORWF	main_out_L0+1, 0
$00DD	$00F0			MOVWF	STACK_0
$00DE	$3080			MOVLW	128
$00DF	$0270			SUBWF	STACK_0, 0
$00E0	$1D03			BTFSS	STATUS, Z
$00E1	$28E4			GOTO	L_main_8
$00E2	$3000			MOVLW	0
$00E3	$0222			SUBWF	main_out_L0, 0
$00E4	$	L_main_8:
$00E4	$1C03			BTFSS	STATUS, C
$00E5	$293F			GOTO	L_main_3
;calculator.c,29 :: 		a[i]=out%2;
$00E6	$3001			MOVLW	1
$00E7	$00F4			MOVWF	STACK_4
$00E8	$0820			MOVF	main_i_L0, 0
$00E9	$00F0			MOVWF	STACK_0
$00EA	$0821			MOVF	main_i_L0+1, 0
$00EB	$00F1			MOVWF	STACK_0+1
$00EC	$0874			MOVF	STACK_4, 0
$00ED	$	L_main_9:
$00ED	$1903			BTFSC	STATUS, Z
$00EE	$28F4			GOTO	L_main_10
$00EF	$0DF0			RLF	STACK_0, 1
$00F0	$0DF1			RLF	STACK_0+1, 1
$00F1	$1070			BCF	STACK_0, 0
$00F2	$3FFF			ADDLW	255
$00F3	$28ED			GOTO	L_main_9
$00F4	$	L_main_10:
$00F4	$0870			MOVF	STACK_0, 0
$00F5	$3F24			ADDLW	main_a_L0
$00F6	$00AC			MOVWF	FLOC_main+12
$00F7	$3002			MOVLW	2
$00F8	$00F4			MOVWF	STACK_4
$00F9	$3000			MOVLW	0
$00FA	$00F5			MOVWF	STACK_4+1
$00FB	$0822			MOVF	main_out_L0, 0
$00FC	$00F0			MOVWF	STACK_0
$00FD	$0823			MOVF	main_out_L0+1, 0
$00FE	$00F1			MOVWF	STACK_0+1
$00FF	$2032			CALL	_div_16x16_s
$0100	$0878			MOVF	STACK_8, 0
$0101	$00F0			MOVWF	STACK_0
$0102	$0879			MOVF	STACK_9, 0
$0103	$00F1			MOVWF	STACK_1
$0104	$082C			MOVF	FLOC_main+12, 0
$0105	$0084			MOVWF	FSR
$0106	$0870			MOVF	STACK_0, 0
$0107	$0080			MOVWF	INDF
$0108	$0871			MOVF	STACK_0+1, 0
$0109	$0A84			INCF	FSR, 1
$010A	$0080			MOVWF	INDF
;calculator.c,30 :: 		out=(out/2)-(a[i]/2);
$010B	$3002			MOVLW	2
$010C	$00F4			MOVWF	STACK_4
$010D	$3000			MOVLW	0
$010E	$00F5			MOVWF	STACK_4+1
$010F	$0822			MOVF	main_out_L0, 0
$0110	$00F0			MOVWF	STACK_0
$0111	$0823			MOVF	main_out_L0+1, 0
$0112	$00F1			MOVWF	STACK_0+1
$0113	$2032			CALL	_div_16x16_s
$0114	$0870			MOVF	STACK_0, 0
$0115	$00AC			MOVWF	FLOC_main+12
$0116	$0871			MOVF	STACK_0+1, 0
$0117	$00AD			MOVWF	FLOC_main+13
$0118	$3001			MOVLW	1
$0119	$00F4			MOVWF	STACK_4
$011A	$0820			MOVF	main_i_L0, 0
$011B	$00F0			MOVWF	STACK_0
$011C	$0821			MOVF	main_i_L0+1, 0
$011D	$00F1			MOVWF	STACK_0+1
$011E	$0874			MOVF	STACK_4, 0
$011F	$	L_main_11:
$011F	$1903			BTFSC	STATUS, Z
$0120	$2926			GOTO	L_main_12
$0121	$0DF0			RLF	STACK_0, 1
$0122	$0DF1			RLF	STACK_0+1, 1
$0123	$1070			BCF	STACK_0, 0
$0124	$3FFF			ADDLW	255
$0125	$291F			GOTO	L_main_11
$0126	$	L_main_12:
$0126	$0870			MOVF	STACK_0, 0
$0127	$3F24			ADDLW	main_a_L0
$0128	$0084			MOVWF	FSR
$0129	$0800			MOVF	INDF, 0
$012A	$00F0			MOVWF	STACK_0
$012B	$0A84			INCF	FSR, 1
$012C	$0800			MOVF	INDF, 0
$012D	$00F1			MOVWF	STACK_0+1
$012E	$3002			MOVLW	2
$012F	$00F4			MOVWF	STACK_4
$0130	$3000			MOVLW	0
$0131	$00F5			MOVWF	STACK_4+1
$0132	$2032			CALL	_div_16x16_s
$0133	$0870			MOVF	STACK_0, 0
$0134	$022C			SUBWF	FLOC_main+12, 0
$0135	$00A2			MOVWF	main_out_L0
$0136	$0871			MOVF	STACK_0+1, 0
$0137	$1C03			BTFSS	STATUS, C
$0138	$3F01			ADDLW	1
$0139	$022D			SUBWF	FLOC_main+13, 0
$013A	$00A3			MOVWF	main_out_L0+1
;calculator.c,31 :: 		i=i+1;
$013B	$0AA0			INCF	main_i_L0, 1
$013C	$1903			BTFSC	STATUS, Z
$013D	$0AA1			INCF	main_i_L0+1, 1
;calculator.c,32 :: 		}
$013E	$28DB			GOTO	L_main_2
$013F	$	L_main_3:
;calculator.c,34 :: 		PORTB.F4=a[3];
$013F	$3000			MOVLW	0
$0140	$182A			BTFSC	main_a_L0+6, 0
$0141	$3010			MOVLW	16
$0142	$0606			XORWF	PORTB, 0
$0143	$3910			ANDLW	16
$0144	$0686			XORWF	PORTB, 1
;calculator.c,35 :: 		PORTB.F5=a[2];
$0145	$3000			MOVLW	0
$0146	$1828			BTFSC	main_a_L0+4, 0
$0147	$3020			MOVLW	32
$0148	$0606			XORWF	PORTB, 0
$0149	$3920			ANDLW	32
$014A	$0686			XORWF	PORTB, 1
;calculator.c,36 :: 		PORTB.F6=a[1];
$014B	$3000			MOVLW	0
$014C	$1826			BTFSC	main_a_L0+2, 0
$014D	$3040			MOVLW	64
$014E	$0606			XORWF	PORTB, 0
$014F	$3940			ANDLW	64
$0150	$0686			XORWF	PORTB, 1
;calculator.c,37 :: 		PORTB.F7=a[0];
$0151	$3000			MOVLW	0
$0152	$1824			BTFSC	main_a_L0, 0
$0153	$3080			MOVLW	128
$0154	$0606			XORWF	PORTB, 0
$0155	$3980			ANDLW	128
$0156	$0686			XORWF	PORTB, 1
;calculator.c,39 :: 		}
$0157	$289D			GOTO	L_main_0
;calculator.c,41 :: 		}
$0158	$2958			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		Div_16x16_S_L
$0032		Div_16x16_S
$008C		main


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_Div_16x16_S_L:
$0032		_Div_16x16_S:
$008C		_main:
$009D		L_main_0:
$00AD		L_main_4:
$00B4		L_main_5:
$00CA		L_main_6:
$00D1		L_main_7:
$00DB		L_main_2:
$00E4		L_main_8:
$00ED		L_main_9:
$00F4		L_main_10:
$011F		L_main_11:
$0126		L_main_12:
$013F		L_main_3:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0006		PORTB
$000A		PCLATH
$0020		main_i_L0
$0022		main_out_L0
$0024		main_a_L0
$002C		
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0086		TRISB


