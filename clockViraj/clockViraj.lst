;  ASM code generated by mikroVirtualMachine for PIC - V. 8.0.0.0
;  Date/Time: 13/12/2015 5:03:31 PM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$29B7			GOTO	_main
$0004	$	_interrupt:
$0004	$00FF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$00AD			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$00AC			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$00AE			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0871			MOVF	STACK_1, 0
$000E	$00B0			MOVWF	STSAVED_1
$000F	$0870			MOVF	STACK_0, 0
$0010	$00AF			MOVWF	STSAVED_0
;clockViraj.c,4 :: 		void interrupt(void)
;clockViraj.c,6 :: 		if (INTCON.TMR0IF==1)
$0011	$3000			MOVLW	0
$0012	$190B			BTFSC	INTCON, 2
$0013	$3001			MOVLW	1
$0014	$00F1			MOVWF	STACK_1
$0015	$0871			MOVF	STACK_1, 0
$0016	$3A01			XORLW	1
$0017	$1D03			BTFSS	STATUS, Z
$0018	$28F5			GOTO	L_interrupt_0
;clockViraj.c,8 :: 		if(state==0){
$0019	$3000			MOVLW	0
$001A	$0621			XORWF	_state+1, 0
$001B	$1D03			BTFSS	STATUS, Z
$001C	$281F			GOTO	L_interrupt_22
$001D	$3000			MOVLW	0
$001E	$0620			XORWF	_state, 0
$001F	$	L_interrupt_22:
$001F	$1D03			BTFSS	STATUS, Z
$0020	$28F5			GOTO	L_interrupt_1
;clockViraj.c,9 :: 		aa=aa+1;
$0021	$0822			MOVF	_aa, 0
$0022	$3F01			ADDLW	1
$0023	$00F1			MOVWF	STACK_1
$0024	$3000			MOVLW	0
$0025	$1803			BTFSC	STATUS, C
$0026	$3F01			ADDLW	1
$0027	$0723			ADDWF	_aa+1, 0
$0028	$00F2			MOVWF	STACK_1+1
$0029	$0871			MOVF	STACK_1, 0
$002A	$00A2			MOVWF	_aa
$002B	$0872			MOVF	STACK_1+1, 0
$002C	$00A3			MOVWF	_aa+1
;clockViraj.c,10 :: 		if(aa==10)
$002D	$3000			MOVLW	0
$002E	$0672			XORWF	STACK_1+1, 0
$002F	$1D03			BTFSS	STATUS, Z
$0030	$2833			GOTO	L_interrupt_23
$0031	$300A			MOVLW	10
$0032	$0671			XORWF	STACK_1, 0
$0033	$	L_interrupt_23:
$0033	$1D03			BTFSS	STATUS, Z
$0034	$2879			GOTO	L_interrupt_2
;clockViraj.c,12 :: 		aa=0;
$0035	$01A2			CLRF	_aa
$0036	$01A3			CLRF	_aa+1
;clockViraj.c,13 :: 		sec=sec+1;
$0037	$0824			MOVF	_sec, 0
$0038	$3F01			ADDLW	1
$0039	$00F1			MOVWF	STACK_1
$003A	$3000			MOVLW	0
$003B	$1803			BTFSC	STATUS, C
$003C	$3F01			ADDLW	1
$003D	$0725			ADDWF	_sec+1, 0
$003E	$00F2			MOVWF	STACK_1+1
$003F	$0871			MOVF	STACK_1, 0
$0040	$00A4			MOVWF	_sec
$0041	$0872			MOVF	STACK_1+1, 0
$0042	$00A5			MOVWF	_sec+1
;clockViraj.c,14 :: 		if(sec==60)
$0043	$3000			MOVLW	0
$0044	$0672			XORWF	STACK_1+1, 0
$0045	$1D03			BTFSS	STATUS, Z
$0046	$2849			GOTO	L_interrupt_24
$0047	$303C			MOVLW	60
$0048	$0671			XORWF	STACK_1, 0
$0049	$	L_interrupt_24:
$0049	$1D03			BTFSS	STATUS, Z
$004A	$2879			GOTO	L_interrupt_3
;clockViraj.c,16 :: 		sec=0;
$004B	$01A4			CLRF	_sec
$004C	$01A5			CLRF	_sec+1
;clockViraj.c,17 :: 		mit=mit+1;
$004D	$0826			MOVF	_mit, 0
$004E	$3F01			ADDLW	1
$004F	$00F1			MOVWF	STACK_1
$0050	$3000			MOVLW	0
$0051	$1803			BTFSC	STATUS, C
$0052	$3F01			ADDLW	1
$0053	$0727			ADDWF	_mit+1, 0
$0054	$00F2			MOVWF	STACK_1+1
$0055	$0871			MOVF	STACK_1, 0
$0056	$00A6			MOVWF	_mit
$0057	$0872			MOVF	STACK_1+1, 0
$0058	$00A7			MOVWF	_mit+1
;clockViraj.c,18 :: 		if(mit==60)
$0059	$3000			MOVLW	0
$005A	$0672			XORWF	STACK_1+1, 0
$005B	$1D03			BTFSS	STATUS, Z
$005C	$285F			GOTO	L_interrupt_25
$005D	$303C			MOVLW	60
$005E	$0671			XORWF	STACK_1, 0
$005F	$	L_interrupt_25:
$005F	$1D03			BTFSS	STATUS, Z
$0060	$2879			GOTO	L_interrupt_4
;clockViraj.c,20 :: 		mit=0;
$0061	$01A6			CLRF	_mit
$0062	$01A7			CLRF	_mit+1
;clockViraj.c,21 :: 		hr=hr+1;
$0063	$0828			MOVF	_hr, 0
$0064	$3F01			ADDLW	1
$0065	$00F1			MOVWF	STACK_1
$0066	$3000			MOVLW	0
$0067	$1803			BTFSC	STATUS, C
$0068	$3F01			ADDLW	1
$0069	$0729			ADDWF	_hr+1, 0
$006A	$00F2			MOVWF	STACK_1+1
$006B	$0871			MOVF	STACK_1, 0
$006C	$00A8			MOVWF	_hr
$006D	$0872			MOVF	STACK_1+1, 0
$006E	$00A9			MOVWF	_hr+1
;clockViraj.c,22 :: 		if(hr==24)
$006F	$3000			MOVLW	0
$0070	$0672			XORWF	STACK_1+1, 0
$0071	$1D03			BTFSS	STATUS, Z
$0072	$2875			GOTO	L_interrupt_26
$0073	$3018			MOVLW	24
$0074	$0671			XORWF	STACK_1, 0
$0075	$	L_interrupt_26:
$0075	$1D03			BTFSS	STATUS, Z
$0076	$2879			GOTO	L_interrupt_5
;clockViraj.c,24 :: 		hr=0;
$0077	$01A8			CLRF	_hr
$0078	$01A9			CLRF	_hr+1
;clockViraj.c,25 :: 		}
$0079	$	L_interrupt_5:
;clockViraj.c,26 :: 		}
$0079	$	L_interrupt_4:
;clockViraj.c,27 :: 		}
$0079	$	L_interrupt_3:
;clockViraj.c,28 :: 		}
$0079	$	L_interrupt_2:
;clockViraj.c,30 :: 		if((PORTB.F1==1) && (state==1))
$0079	$3000			MOVLW	0
$007A	$1886			BTFSC	PORTB, 1
$007B	$3001			MOVLW	1
$007C	$00F1			MOVWF	STACK_1
$007D	$0871			MOVF	STACK_1, 0
$007E	$3A01			XORLW	1
$007F	$1D03			BTFSS	STATUS, Z
$0080	$28A2			GOTO	L_interrupt_8
$0081	$3000			MOVLW	0
$0082	$0621			XORWF	_state+1, 0
$0083	$1D03			BTFSS	STATUS, Z
$0084	$2887			GOTO	L_interrupt_27
$0085	$3001			MOVLW	1
$0086	$0620			XORWF	_state, 0
$0087	$	L_interrupt_27:
$0087	$1D03			BTFSS	STATUS, Z
$0088	$28A2			GOTO	L_interrupt_8
$0089	$	L46_ex_L_interrupt_8:
;clockViraj.c,32 :: 		hr=hr+1;
$0089	$0828			MOVF	_hr, 0
$008A	$3F01			ADDLW	1
$008B	$00F1			MOVWF	STACK_1
$008C	$3000			MOVLW	0
$008D	$1803			BTFSC	STATUS, C
$008E	$3F01			ADDLW	1
$008F	$0729			ADDWF	_hr+1, 0
$0090	$00F2			MOVWF	STACK_1+1
$0091	$0871			MOVF	STACK_1, 0
$0092	$00A8			MOVWF	_hr
$0093	$0872			MOVF	STACK_1+1, 0
$0094	$00A9			MOVWF	_hr+1
;clockViraj.c,33 :: 		if(hr>=24)
$0095	$3080			MOVLW	128
$0096	$0672			XORWF	STACK_1+1, 0
$0097	$00F0			MOVWF	STACK_0
$0098	$3080			MOVLW	128
$0099	$0270			SUBWF	STACK_0, 0
$009A	$1D03			BTFSS	STATUS, Z
$009B	$289E			GOTO	L_interrupt_28
$009C	$3018			MOVLW	24
$009D	$0271			SUBWF	STACK_1, 0
$009E	$	L_interrupt_28:
$009E	$1C03			BTFSS	STATUS, C
$009F	$28A2			GOTO	L_interrupt_9
;clockViraj.c,35 :: 		hr=0;
$00A0	$01A8			CLRF	_hr
$00A1	$01A9			CLRF	_hr+1
;clockViraj.c,36 :: 		}
$00A2	$	L_interrupt_9:
;clockViraj.c,37 :: 		}
$00A2	$	L_interrupt_8:
;clockViraj.c,38 :: 		if((PORTB.F1==1) && (state==2))
$00A2	$3000			MOVLW	0
$00A3	$1886			BTFSC	PORTB, 1
$00A4	$3001			MOVLW	1
$00A5	$00F1			MOVWF	STACK_1
$00A6	$0871			MOVF	STACK_1, 0
$00A7	$3A01			XORLW	1
$00A8	$1D03			BTFSS	STATUS, Z
$00A9	$28CB			GOTO	L_interrupt_12
$00AA	$3000			MOVLW	0
$00AB	$0621			XORWF	_state+1, 0
$00AC	$1D03			BTFSS	STATUS, Z
$00AD	$28B0			GOTO	L_interrupt_29
$00AE	$3002			MOVLW	2
$00AF	$0620			XORWF	_state, 0
$00B0	$	L_interrupt_29:
$00B0	$1D03			BTFSS	STATUS, Z
$00B1	$28CB			GOTO	L_interrupt_12
$00B2	$	L68_ex_L_interrupt_12:
;clockViraj.c,40 :: 		mit=mit+1;
$00B2	$0826			MOVF	_mit, 0
$00B3	$3F01			ADDLW	1
$00B4	$00F1			MOVWF	STACK_1
$00B5	$3000			MOVLW	0
$00B6	$1803			BTFSC	STATUS, C
$00B7	$3F01			ADDLW	1
$00B8	$0727			ADDWF	_mit+1, 0
$00B9	$00F2			MOVWF	STACK_1+1
$00BA	$0871			MOVF	STACK_1, 0
$00BB	$00A6			MOVWF	_mit
$00BC	$0872			MOVF	STACK_1+1, 0
$00BD	$00A7			MOVWF	_mit+1
;clockViraj.c,41 :: 		if(mit>=60)
$00BE	$3080			MOVLW	128
$00BF	$0672			XORWF	STACK_1+1, 0
$00C0	$00F0			MOVWF	STACK_0
$00C1	$3080			MOVLW	128
$00C2	$0270			SUBWF	STACK_0, 0
$00C3	$1D03			BTFSS	STATUS, Z
$00C4	$28C7			GOTO	L_interrupt_30
$00C5	$303C			MOVLW	60
$00C6	$0271			SUBWF	STACK_1, 0
$00C7	$	L_interrupt_30:
$00C7	$1C03			BTFSS	STATUS, C
$00C8	$28CB			GOTO	L_interrupt_13
;clockViraj.c,43 :: 		mit=0;
$00C9	$01A6			CLRF	_mit
$00CA	$01A7			CLRF	_mit+1
;clockViraj.c,44 :: 		}
$00CB	$	L_interrupt_13:
;clockViraj.c,45 :: 		}
$00CB	$	L_interrupt_12:
;clockViraj.c,46 :: 		if((PORTB.F1==1) && (state==3))
$00CB	$3000			MOVLW	0
$00CC	$1886			BTFSC	PORTB, 1
$00CD	$3001			MOVLW	1
$00CE	$00F1			MOVWF	STACK_1
$00CF	$0871			MOVF	STACK_1, 0
$00D0	$3A01			XORLW	1
$00D1	$1D03			BTFSS	STATUS, Z
$00D2	$28F4			GOTO	L_interrupt_16
$00D3	$3000			MOVLW	0
$00D4	$0621			XORWF	_state+1, 0
$00D5	$1D03			BTFSS	STATUS, Z
$00D6	$28D9			GOTO	L_interrupt_31
$00D7	$3003			MOVLW	3
$00D8	$0620			XORWF	_state, 0
$00D9	$	L_interrupt_31:
$00D9	$1D03			BTFSS	STATUS, Z
$00DA	$28F4			GOTO	L_interrupt_16
$00DB	$	L90_ex_L_interrupt_16:
;clockViraj.c,48 :: 		sec=sec+1;
$00DB	$0824			MOVF	_sec, 0
$00DC	$3F01			ADDLW	1
$00DD	$00F1			MOVWF	STACK_1
$00DE	$3000			MOVLW	0
$00DF	$1803			BTFSC	STATUS, C
$00E0	$3F01			ADDLW	1
$00E1	$0725			ADDWF	_sec+1, 0
$00E2	$00F2			MOVWF	STACK_1+1
$00E3	$0871			MOVF	STACK_1, 0
$00E4	$00A4			MOVWF	_sec
$00E5	$0872			MOVF	STACK_1+1, 0
$00E6	$00A5			MOVWF	_sec+1
;clockViraj.c,49 :: 		if(sec>=60)
$00E7	$3080			MOVLW	128
$00E8	$0672			XORWF	STACK_1+1, 0
$00E9	$00F0			MOVWF	STACK_0
$00EA	$3080			MOVLW	128
$00EB	$0270			SUBWF	STACK_0, 0
$00EC	$1D03			BTFSS	STATUS, Z
$00ED	$28F0			GOTO	L_interrupt_32
$00EE	$303C			MOVLW	60
$00EF	$0271			SUBWF	STACK_1, 0
$00F0	$	L_interrupt_32:
$00F0	$1C03			BTFSS	STATUS, C
$00F1	$28F4			GOTO	L_interrupt_17
;clockViraj.c,51 :: 		sec=0;
$00F2	$01A4			CLRF	_sec
$00F3	$01A5			CLRF	_sec+1
;clockViraj.c,52 :: 		}
$00F4	$	L_interrupt_17:
;clockViraj.c,53 :: 		}
$00F4	$	L_interrupt_16:
;clockViraj.c,54 :: 		INTCON.TMR0IF=0;
$00F4	$110B			BCF	INTCON, 2
;clockViraj.c,55 :: 		}
$00F5	$	L_interrupt_1:
;clockViraj.c,56 :: 		}
$00F5	$	L_interrupt_0:
;clockViraj.c,58 :: 		if(INTCON.INTF==1)
$00F5	$3000			MOVLW	0
$00F6	$188B			BTFSC	INTCON, 1
$00F7	$3001			MOVLW	1
$00F8	$00F1			MOVWF	STACK_1
$00F9	$0871			MOVF	STACK_1, 0
$00FA	$3A01			XORLW	1
$00FB	$1D03			BTFSS	STATUS, Z
$00FC	$2917			GOTO	L_interrupt_18
;clockViraj.c,60 :: 		state=state+1;
$00FD	$0820			MOVF	_state, 0
$00FE	$3F01			ADDLW	1
$00FF	$00F1			MOVWF	STACK_1
$0100	$3000			MOVLW	0
$0101	$1803			BTFSC	STATUS, C
$0102	$3F01			ADDLW	1
$0103	$0721			ADDWF	_state+1, 0
$0104	$00F2			MOVWF	STACK_1+1
$0105	$0871			MOVF	STACK_1, 0
$0106	$00A0			MOVWF	_state
$0107	$0872			MOVF	STACK_1+1, 0
$0108	$00A1			MOVWF	_state+1
;clockViraj.c,61 :: 		if(state>=4)
$0109	$3080			MOVLW	128
$010A	$0672			XORWF	STACK_1+1, 0
$010B	$00F0			MOVWF	STACK_0
$010C	$3080			MOVLW	128
$010D	$0270			SUBWF	STACK_0, 0
$010E	$1D03			BTFSS	STATUS, Z
$010F	$2912			GOTO	L_interrupt_33
$0110	$3004			MOVLW	4
$0111	$0271			SUBWF	STACK_1, 0
$0112	$	L_interrupt_33:
$0112	$1C03			BTFSS	STATUS, C
$0113	$2916			GOTO	L_interrupt_19
;clockViraj.c,63 :: 		state=0;
$0114	$01A0			CLRF	_state
$0115	$01A1			CLRF	_state+1
;clockViraj.c,64 :: 		}
$0116	$	L_interrupt_19:
;clockViraj.c,68 :: 		INTCON.INTF=0;
$0116	$108B			BCF	INTCON, 1
;clockViraj.c,69 :: 		}
$0117	$	L_interrupt_18:
;clockViraj.c,70 :: 		}
$0117	$	L_Interrupt_end:
$0117	$0830			MOVF	STSAVED_1, 0
$0118	$00F1			MOVWF	STACK_1
$0119	$082F			MOVF	STSAVED_0, 0
$011A	$00F0			MOVWF	STACK_0
$011B	$082E			MOVF	?savePCLATH, 0
$011C	$008A			MOVWF	PCLATH
$011D	$082C			MOVF	?saveFSR, 0
$011E	$0084			MOVWF	FSR
$011F	$0E2D			SWAPF	?saveSTATUS, 0
$0120	$0083			MOVWF	STATUS
$0121	$0EFF			SWAPF	STACK_15, 1
$0122	$0E7F			SWAPF	STACK_15, 0
$0123	$0009			RETFIE
$0124	$	_Div_16x16_S_L:
$0124	$1303			BCF	STATUS, RP1
$0125	$1283			BCF	STATUS, RP0
$0126	$0D71			RLF	STACK_1, W
$0127	$0DF8			RLF	STACK_8, F
$0128	$0DF9			RLF	STACK_9, F
$0129	$0874			MOVF	STACK_4, W
$012A	$02F8			SUBWF	STACK_8, F
$012B	$0875			MOVF	STACK_5, W
$012C	$1C03			BTFSS	STATUS, C
$012D	$0F75			INCFSZ	STACK_5, W
$012E	$02F9			SUBWF	STACK_9, F
$012F	$0DF0			RLF	STACK_0, F
$0130	$0DF1			RLF	STACK_1, F
$0131	$300F			MOVLW	15
$0132	$00FC			MOVWF	STACK_12
$0133	$0D71			RLF	STACK_1, W
$0134	$0DF8			RLF	STACK_8, F
$0135	$0DF9			RLF	STACK_9, F
$0136	$0874			MOVF	STACK_4, W
$0137	$1C70			BTFSS	STACK_0, 0
$0138	$293F			GOTO	$+7
$0139	$02F8			SUBWF	STACK_8, F
$013A	$0875			MOVF	STACK_5, W
$013B	$1C03			BTFSS	STATUS, C
$013C	$0F75			INCFSZ	STACK_5, W
$013D	$02F9			SUBWF	STACK_9, F
$013E	$2944			GOTO	$+6
$013F	$07F8			ADDWF	STACK_8, F
$0140	$0875			MOVF	STACK_5, W
$0141	$1803			BTFSC	STATUS, C
$0142	$0F75			INCFSZ	STACK_5, W
$0143	$07F9			ADDWF	STACK_9, F
$0144	$0DF0			RLF	STACK_0, F
$0145	$0DF1			RLF	STACK_1, F
$0146	$0BFC			DECFSZ	STACK_12, F
$0147	$2933			GOTO	$-20
$0148	$1870			BTFSC	STACK_0, 0
$0149	$2950			GOTO	$+7
$014A	$0874			MOVF	STACK_4, W
$014B	$07F8			ADDWF	STACK_8, F
$014C	$0875			MOVF	STACK_5, W
$014D	$1803			BTFSC	STATUS, C
$014E	$0F75			INCFSZ	STACK_5, W
$014F	$07F9			ADDWF	STACK_9, F
$0150	$0000			NOP
$0151	$0008			RETURN
$0152	$	GlobalIniclockViraj:
$0152	$3000			MOVLW	0
$0153	$1303			BCF	STATUS, RP1
$0154	$1283			BCF	STATUS, RP0
$0155	$00AA			MOVWF	_cc+0
$0156	$3000			MOVLW	0
$0157	$00AB			MOVWF	_cc+1
$0158	$3000			MOVLW	0
$0159	$00A0			MOVWF	_state+0
$015A	$3000			MOVLW	0
$015B	$00A1			MOVWF	_state+1
$015C	$0008			RETURN
$015D	$	_Div_16x16_S:
$015D	$1303			BCF	STATUS, RP1
$015E	$1283			BCF	STATUS, RP0
$015F	$01FD			CLRF	STACK_13
$0160	$01F9			CLRF	STACK_9
$0161	$01F8			CLRF	STACK_8
$0162	$0871			MOVF	STACK_1, W
$0163	$0470			IORWF	STACK_0, W
$0164	$1903			BTFSC	STATUS, Z
$0165	$3400			RETLW	0
$0166	$0871			MOVF	STACK_1, W
$0167	$0675			XORWF	STACK_5, W
$0168	$00FA			MOVWF	STACK_10
$0169	$1BFA			BTFSC	STACK_10, 7
$016A	$09FD			COMF	STACK_13, F
$016B	$01FB			CLRF	STACK_11
$016C	$1FF5			BTFSS	STACK_5, 7
$016D	$2973			GOTO	$+6
$016E	$09F4			COMF	STACK_4, F
$016F	$09F5			COMF	STACK_5, F
$0170	$0AF4			INCF	STACK_4, F
$0171	$1903			BTFSC	STATUS, Z
$0172	$0AF5			INCF	STACK_5, F
$0173	$1FF1			BTFSS	STACK_1, 7
$0174	$297A			GOTO	$+6
$0175	$09F0			COMF	STACK_0, F
$0176	$09F1			COMF	STACK_1, F
$0177	$0AF0			INCF	STACK_0, F
$0178	$1903			BTFSC	STATUS, Z
$0179	$0AF1			INCF	STACK_1, F
$017A	$0871			MOVF	STACK_1, W
$017B	$0475			IORWF	STACK_5, W
$017C	$00FA			MOVWF	STACK_10
$017D	$1BFA			BTFSC	STACK_10, 7
$017E	$298F			GOTO	$+17
$017F	$2124			CALL	_Div_16x16_S_L
$0180	$187B			BTFSC	STACK_11, 0
$0181	$29A2			GOTO	$+33
$0182	$1FFD			BTFSS	STACK_13, 7
$0183	$3400			RETLW	0
$0184	$09F0			COMF	STACK_0, F
$0185	$09F1			COMF	STACK_1, F
$0186	$0AF0			INCF	STACK_0, F
$0187	$1903			BTFSC	STATUS, Z
$0188	$0AF1			INCF	STACK_1, F
$0189	$09F8			COMF	STACK_8, F
$018A	$09F9			COMF	STACK_9, F
$018B	$0AF8			INCF	STACK_8, F
$018C	$1903			BTFSC	STATUS, Z
$018D	$0AF9			INCF	STACK_9, F
$018E	$3400			RETLW	0
$018F	$1FF5			BTFSS	STACK_5, 7
$0190	$299E			GOTO	$+14
$0191	$1BF1			BTFSC	STACK_1, 7
$0192	$299A			GOTO	$+8
$0193	$0871			MOVF	STACK_1, W
$0194	$00F9			MOVWF	STACK_9
$0195	$0870			MOVF	STACK_0, W
$0196	$00F8			MOVWF	STACK_8
$0197	$01F1			CLRF	STACK_1
$0198	$01F0			CLRF	STACK_0
$0199	$2982			GOTO	$-23
$019A	$01F1			CLRF	STACK_1
$019B	$01F0			CLRF	STACK_0
$019C	$0AF0			INCF	STACK_0, F
$019D	$3400			RETLW	0
$019E	$09F1			COMF	STACK_1, F
$019F	$09F0			COMF	STACK_0, F
$01A0	$0AFB			INCF	STACK_11, F
$01A1	$297F			GOTO	$-34
$01A2	$0AF8			INCF	STACK_8, F
$01A3	$1903			BTFSC	STATUS, Z
$01A4	$0AF9			INCF	STACK_9, F
$01A5	$0874			MOVF	STACK_4, W
$01A6	$0278			SUBWF	STACK_8, W
$01A7	$1D03			BTFSS	STATUS, Z
$01A8	$2982			GOTO	$-38
$01A9	$0875			MOVF	STACK_5, W
$01AA	$0279			SUBWF	STACK_9, W
$01AB	$1D03			BTFSS	STATUS, Z
$01AC	$2982			GOTO	$-42
$01AD	$01F9			CLRF	STACK_9
$01AE	$01F8			CLRF	STACK_8
$01AF	$0AF0			INCF	STACK_0, F
$01B0	$1903			BTFSC	STATUS, Z
$01B1	$0AF1			INCF	STACK_1, F
$01B2	$1FF1			BTFSS	STACK_1, 7
$01B3	$2982			GOTO	$-49
$01B4	$0000			NOP
$01B5	$34FF			RETLW	255
$01B6	$0008			RETURN
$01B7	$	_main:
;clockViraj.c,73 :: 		void main()
;clockViraj.c,75 :: 		TRISB=0b11111111;
$01B7	$2152			CALL	GlobalIniclockViraj
$01B8	$30FF			MOVLW	255
$01B9	$1683			BSF	STATUS, RP0
$01BA	$0086			MOVWF	TRISB
;clockViraj.c,76 :: 		TRISC=0b00000000;
$01BB	$0187			CLRF	TRISC, 1
;clockViraj.c,77 :: 		TRISD=0b00000000;
$01BC	$0188			CLRF	TRISD, 1
;clockViraj.c,78 :: 		INTCON=0b10110000;
$01BD	$30B0			MOVLW	176
$01BE	$008B			MOVWF	INTCON
;clockViraj.c,79 :: 		OPTION_REG=0b10000000;
$01BF	$3080			MOVLW	128
$01C0	$0081			MOVWF	OPTION_REG
;clockViraj.c,80 :: 		while(1)
$01C1	$	L_main_20:
;clockViraj.c,82 :: 		PORTC= (sec/10)+(128+64+16);
$01C1	$300A			MOVLW	10
$01C2	$00F4			MOVWF	STACK_4
$01C3	$3000			MOVLW	0
$01C4	$00F5			MOVWF	STACK_4+1
$01C5	$1283			BCF	STATUS, RP0
$01C6	$0824			MOVF	_sec, 0
$01C7	$00F0			MOVWF	STACK_0
$01C8	$0825			MOVF	_sec+1, 0
$01C9	$00F1			MOVWF	STACK_0+1
$01CA	$215D			CALL	_div_16x16_s
$01CB	$30D0			MOVLW	208
$01CC	$0770			ADDWF	STACK_0, 0
$01CD	$0087			MOVWF	PORTC
;clockViraj.c,83 :: 		PORTC= (sec%10)+(128+64+32);
$01CE	$300A			MOVLW	10
$01CF	$00F4			MOVWF	STACK_4
$01D0	$3000			MOVLW	0
$01D1	$00F5			MOVWF	STACK_4+1
$01D2	$0824			MOVF	_sec, 0
$01D3	$00F0			MOVWF	STACK_0
$01D4	$0825			MOVF	_sec+1, 0
$01D5	$00F1			MOVWF	STACK_0+1
$01D6	$215D			CALL	_div_16x16_s
$01D7	$0878			MOVF	STACK_8, 0
$01D8	$00F0			MOVWF	STACK_0
$01D9	$0879			MOVF	STACK_9, 0
$01DA	$00F1			MOVWF	STACK_1
$01DB	$30E0			MOVLW	224
$01DC	$0770			ADDWF	STACK_0, 0
$01DD	$0087			MOVWF	PORTC
;clockViraj.c,85 :: 		PORTC=(mit/10)+(64+32+16);
$01DE	$300A			MOVLW	10
$01DF	$00F4			MOVWF	STACK_4
$01E0	$3000			MOVLW	0
$01E1	$00F5			MOVWF	STACK_4+1
$01E2	$0826			MOVF	_mit, 0
$01E3	$00F0			MOVWF	STACK_0
$01E4	$0827			MOVF	_mit+1, 0
$01E5	$00F1			MOVWF	STACK_0+1
$01E6	$215D			CALL	_div_16x16_s
$01E7	$3070			MOVLW	112
$01E8	$0770			ADDWF	STACK_0, 0
$01E9	$0087			MOVWF	PORTC
;clockViraj.c,86 :: 		PORTC=(mit%10)+(128+32+16);
$01EA	$300A			MOVLW	10
$01EB	$00F4			MOVWF	STACK_4
$01EC	$3000			MOVLW	0
$01ED	$00F5			MOVWF	STACK_4+1
$01EE	$0826			MOVF	_mit, 0
$01EF	$00F0			MOVWF	STACK_0
$01F0	$0827			MOVF	_mit+1, 0
$01F1	$00F1			MOVWF	STACK_0+1
$01F2	$215D			CALL	_div_16x16_s
$01F3	$0878			MOVF	STACK_8, 0
$01F4	$00F0			MOVWF	STACK_0
$01F5	$0879			MOVF	STACK_9, 0
$01F6	$00F1			MOVWF	STACK_1
$01F7	$30B0			MOVLW	176
$01F8	$0770			ADDWF	STACK_0, 0
$01F9	$0087			MOVWF	PORTC
;clockViraj.c,88 :: 		PORTD=(hr/10)+(128+64+16);
$01FA	$300A			MOVLW	10
$01FB	$00F4			MOVWF	STACK_4
$01FC	$3000			MOVLW	0
$01FD	$00F5			MOVWF	STACK_4+1
$01FE	$0828			MOVF	_hr, 0
$01FF	$00F0			MOVWF	STACK_0
$0200	$0829			MOVF	_hr+1, 0
$0201	$00F1			MOVWF	STACK_0+1
$0202	$215D			CALL	_div_16x16_s
$0203	$30D0			MOVLW	208
$0204	$0770			ADDWF	STACK_0, 0
$0205	$0088			MOVWF	PORTD
;clockViraj.c,89 :: 		PORTD=(hr%10)+(128+64+32);
$0206	$300A			MOVLW	10
$0207	$00F4			MOVWF	STACK_4
$0208	$3000			MOVLW	0
$0209	$00F5			MOVWF	STACK_4+1
$020A	$0828			MOVF	_hr, 0
$020B	$00F0			MOVWF	STACK_0
$020C	$0829			MOVF	_hr+1, 0
$020D	$00F1			MOVWF	STACK_0+1
$020E	$215D			CALL	_div_16x16_s
$020F	$0878			MOVF	STACK_8, 0
$0210	$00F0			MOVWF	STACK_0
$0211	$0879			MOVF	STACK_9, 0
$0212	$00F1			MOVWF	STACK_1
$0213	$30E0			MOVLW	224
$0214	$0770			ADDWF	STACK_0, 0
$0215	$0088			MOVWF	PORTD
;clockViraj.c,114 :: 		}
$0216	$29C1			GOTO	L_main_20
;clockViraj.c,115 :: 		}
$0217	$2A17			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		interrupt
$0124		Div_16x16_S_L
$0152		GlobalIniclockViraj
$015D		Div_16x16_S
$01B7		main


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_interrupt:
$001F		L_interrupt_22:
$0033		L_interrupt_23:
$0049		L_interrupt_24:
$005F		L_interrupt_25:
$0075		L_interrupt_26:
$0079		L_interrupt_2:
$0079		L_interrupt_3:
$0079		L_interrupt_4:
$0079		L_interrupt_5:
$0087		L_interrupt_27:
$0089		L46_ex_L_interrupt_8:
$009E		L_interrupt_28:
$00A2		L_interrupt_8:
$00A2		L_interrupt_9:
$00B0		L_interrupt_29:
$00B2		L68_ex_L_interrupt_12:
$00C7		L_interrupt_30:
$00CB		L_interrupt_12:
$00CB		L_interrupt_13:
$00D9		L_interrupt_31:
$00DB		L90_ex_L_interrupt_16:
$00F0		L_interrupt_32:
$00F4		L_interrupt_16:
$00F4		L_interrupt_17:
$00F5		L_interrupt_0:
$00F5		L_interrupt_1:
$0112		L_interrupt_33:
$0116		L_interrupt_19:
$0117		L_interrupt_18:
$0117		L_Interrupt_end:
$0124		_Div_16x16_S_L:
$0152		GlobalIniclockViraj:
$015D		_Div_16x16_S:
$01B7		_main:
$01C1		L_main_20:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0006		PORTB
$0007		PORTC
$0008		PORTD
$000A		PCLATH
$000B		INTCON
$0020		_state
$0022		_aa
$0024		_sec
$0026		_mit
$0028		_hr
$002A		_cc
$002C		?saveFSR
$002D		?saveSTATUS
$002E		?savePCLATH
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0081		OPTION_REG
$0086		TRISB
$0087		TRISC
$0088		TRISD


