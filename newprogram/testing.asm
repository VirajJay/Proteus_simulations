;  ASM code generated by mikroVirtualMachine for PIC - V. 8.0.0.0
;  Date/Time: 6/12/2015 12:16:33 PM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0004	$	_main:
;testing.c,1 :: 		void main()
;testing.c,3 :: 		int x,y=0;
$0004	$1303			BCF	STATUS, RP1
$0005	$1283			BCF	STATUS, RP0
$0006	$01A2			CLRF	main_y_L0
$0007	$01A3			CLRF	main_y_L0+1
;testing.c,4 :: 		TRISC=0b00000000;
$0008	$1683			BSF	STATUS, RP0
$0009	$0187			CLRF	TRISC, 1
;testing.c,6 :: 		while(1)
$000A	$	L_main_0:
;testing.c,8 :: 		x++;
$000A	$1283			BCF	STATUS, RP0
$000B	$0AA0			INCF	main_x_L0, 1
$000C	$1903			BTFSC	STATUS, Z
$000D	$0AA1			INCF	main_x_L0+1, 1
;testing.c,9 :: 		y=y+2;
$000E	$3002			MOVLW	2
$000F	$07A2			ADDWF	main_y_L0, 1
$0010	$1803			BTFSC	STATUS, C
$0011	$0AA3			INCF	main_y_L0+1, 1
;testing.c,10 :: 		if (x>9)
$0012	$3080			MOVLW	128
$0013	$00F0			MOVWF	STACK_0
$0014	$3080			MOVLW	128
$0015	$0621			XORWF	main_x_L0+1, 0
$0016	$0270			SUBWF	STACK_0, 0
$0017	$1D03			BTFSS	STATUS, Z
$0018	$281B			GOTO	L_main_4
$0019	$0820			MOVF	main_x_L0, 0
$001A	$3C09			SUBLW	9
$001B	$	L_main_4:
$001B	$1803			BTFSC	STATUS, C
$001C	$281F			GOTO	L_main_2
;testing.c,11 :: 		x=0;
$001D	$01A0			CLRF	main_x_L0
$001E	$01A1			CLRF	main_x_L0+1
$001F	$	L_main_2:
;testing.c,12 :: 		if (y>9)
$001F	$3080			MOVLW	128
$0020	$00F0			MOVWF	STACK_0
$0021	$3080			MOVLW	128
$0022	$0623			XORWF	main_y_L0+1, 0
$0023	$0270			SUBWF	STACK_0, 0
$0024	$1D03			BTFSS	STATUS, Z
$0025	$2828			GOTO	L_main_5
$0026	$0822			MOVF	main_y_L0, 0
$0027	$3C09			SUBLW	9
$0028	$	L_main_5:
$0028	$1803			BTFSC	STATUS, C
$0029	$282C			GOTO	L_main_3
;testing.c,13 :: 		y=0;
$002A	$01A2			CLRF	main_y_L0
$002B	$01A3			CLRF	main_y_L0+1
$002C	$	L_main_3:
;testing.c,14 :: 		delay_ms(500);
$002C	$3006			MOVLW	6
$002D	$00FC			MOVWF	STACK_12
$002E	$30FF			MOVLW	255
$002F	$00FB			MOVWF	STACK_11
$0030	$30FF			MOVLW	255
$0031	$00FA			MOVWF	STACK_10
$0032	$0BFC			DECFSZ	STACK_12, F
$0033	$2835			GOTO	$+2
$0034	$283C			GOTO	$+8
$0035	$0BFB			DECFSZ	STACK_11, F
$0036	$2838			GOTO	$+2
$0037	$283B			GOTO	$+4
$0038	$0BFA			DECFSZ	STACK_10, F
$0039	$2838			GOTO	$-1
$003A	$2835			GOTO	$-5
$003B	$2832			GOTO	$-9
$003C	$301A			MOVLW	26
$003D	$00FB			MOVWF	STACK_11
$003E	$30FF			MOVLW	255
$003F	$00FA			MOVWF	STACK_10
$0040	$0BFB			DECFSZ	STACK_11, F
$0041	$2843			GOTO	$+2
$0042	$2846			GOTO	$+4
$0043	$0BFA			DECFSZ	STACK_10, F
$0044	$2843			GOTO	$-1
$0045	$2840			GOTO	$-5
$0046	$3042			MOVLW	66
$0047	$00FA			MOVWF	STACK_10
$0048	$0BFA			DECFSZ	STACK_10, F
$0049	$2848			GOTO	$-1
;testing.c,15 :: 		PORTC=x+(128+64+32);
$004A	$30E0			MOVLW	224
$004B	$0720			ADDWF	main_x_L0, 0
$004C	$0087			MOVWF	PORTC
;testing.c,17 :: 		PORTC=y+(128+64+16);
$004D	$30D0			MOVLW	208
$004E	$0722			ADDWF	main_y_L0, 0
$004F	$0087			MOVWF	PORTC
;testing.c,18 :: 		}
$0050	$280A			GOTO	L_main_0
;testing.c,19 :: 		}
$0051	$2851			GOTO	$
